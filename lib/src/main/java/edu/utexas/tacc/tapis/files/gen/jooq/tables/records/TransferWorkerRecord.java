/*
 * This file is generated by jOOQ.
 */
package edu.utexas.tacc.tapis.files.gen.jooq.tables.records;


import edu.utexas.tacc.tapis.files.gen.jooq.tables.TransferWorker;

import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransferWorkerRecord extends TableRecordImpl<TransferWorkerRecord> implements Record2<UUID, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.transfer_worker.uuid</code>.
     */
    public void setUuid(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.transfer_worker.uuid</code>.
     */
    public UUID getUuid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.transfer_worker.last_updated</code>.
     */
    public void setLastUpdated(OffsetDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.transfer_worker.last_updated</code>.
     */
    public OffsetDateTime getLastUpdated() {
        return (OffsetDateTime) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, OffsetDateTime> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, OffsetDateTime> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return TransferWorker.TRANSFER_WORKER.UUID;
    }

    @Override
    public Field<OffsetDateTime> field2() {
        return TransferWorker.TRANSFER_WORKER.LAST_UPDATED;
    }

    @Override
    public UUID component1() {
        return getUuid();
    }

    @Override
    public OffsetDateTime component2() {
        return getLastUpdated();
    }

    @Override
    public UUID value1() {
        return getUuid();
    }

    @Override
    public OffsetDateTime value2() {
        return getLastUpdated();
    }

    @Override
    public TransferWorkerRecord value1(UUID value) {
        setUuid(value);
        return this;
    }

    @Override
    public TransferWorkerRecord value2(OffsetDateTime value) {
        setLastUpdated(value);
        return this;
    }

    @Override
    public TransferWorkerRecord values(UUID value1, OffsetDateTime value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransferWorkerRecord
     */
    public TransferWorkerRecord() {
        super(TransferWorker.TRANSFER_WORKER);
    }

    /**
     * Create a detached, initialised TransferWorkerRecord
     */
    public TransferWorkerRecord(UUID uuid, OffsetDateTime lastUpdated) {
        super(TransferWorker.TRANSFER_WORKER);

        setUuid(uuid);
        setLastUpdated(lastUpdated);
    }
}
